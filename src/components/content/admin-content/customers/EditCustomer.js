import React, {Fragment, useContext, useState} from "react";
import {SERVER_URL} from "../../../../constants";
import {toast} from "react-toastify";
import axios from "axios";
import {Context} from "../../../../index";

const EditCustomer = ({customer}) => {
    const [customer_name, setCustomerName] = useState(customer.customer_name)
    const [customer_email, setCustomerEmail] = useState(customer.customer_email)
    const {DB} = useContext(Context);
    const inputRef = React.useRef(null)
    const updateCustomer = async (e) => {
        e.preventDefault()
        try {
            const body = {customer_name, customer_email}
            await fetch(SERVER_URL + `/customers/${customer.customer_id}`, {
                method: "PUT",
                headers: {"Content-Type": "application/json"},
                body: JSON.stringify(body)
            })
                .then(response => response.json())
                .then(data => toast(data));
            axios.get(SERVER_URL + `/customers`)
                .then(resp => DB.setCustomers(resp.data))
            inputRef.current.click()
        } catch (e) {
            toast.info("ü¶Ñ –ê—Ö–∞—Ö—Ö–∞ —Å–µ—Ä–≤–µ—Ä —É–ø–∞–ª")
        }
    }
    return (
        <Fragment>
            <button type="button" className="btn btn-warning" data-toggle="modal"
                    data-target={`#id${customer.customer_id}`}>
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            </button>

            <div className="modal fade" id={`id${customer.customer_id}`} tabIndex="-1" role="dialog"
                 aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div className="modal-dialog" role="document">
                    <div className="modal-content">
                        <form onSubmit={event => updateCustomer(event)}>
                            <div className="modal-header">
                                <h2 className="modal-title" id="exampleModalLabel">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—É–ø–∞—Ç–µ–ª—è</h2>
                                <button type="button" className="close" data-dismiss="modal">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div className="modal-body">
                                <label htmlFor={`name`}>–§–ò–û –ø–æ–∫—É–ø–∞—Ç–µ–ª—è</label>
                                <input className="form-control" placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á –ò–≤–∞–Ω–æ–≤" value={customer_name}
                                       name={`name`}
                                       onChange={e => setCustomerName(e.target.value)} required
                                       pattern="/^[A-Z–ê-–Øa-z–∞-—è -]+$/i"
                                />
                                <label htmlFor={`email`}>e-mail</label>
                                <input className="form-control" value={customer_email} name={`email`} type={`email`}
                                       onChange={e => setCustomerEmail(e.target.value)}
                                       required
                                       pattern="/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i"
                                />
                            </div>
                            <div className="modal-footer">
                                <button type="button" className="btn btn-secondary" data-dismiss="modal" ref={inputRef}>–ó–∞–∫—Ä—ã—Ç—å
                                </button>
                                <button type="submit" className="btn btn-primary">
                                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </Fragment>
    )
}

export default EditCustomer;